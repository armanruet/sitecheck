1:HL["/armanruet52.github.io/_next/static/css/1834e432f4989182.css","style",{"crossOrigin":""}]
0:["7EQBjUgFphXN-VuWshEuw",[[["",{"children":["blog",{"children":[["slug","create-and-publish-your-own-react-component-library-with-typescript-storybook-and-tailwind","d"],{"children":["__PAGE__?{\"slug\":\"create-and-publish-your-own-react-component-library-with-typescript-storybook-and-tailwind\"}",{}]}]}]},"$undefined","$undefined",true],"$L2",[[["$","link","0",{"rel":"stylesheet","href":"/armanruet52.github.io/_next/static/css/1834e432f4989182.css","precedence":"next","crossOrigin":""}]],"$L3"]]]]
4:HL["/armanruet52.github.io/_next/static/css/87ca012b368cc111.css","style",{"crossOrigin":""}]
5:I[4504,["779","static/chunks/0e762574-ada009a30e142e51.js","792","static/chunks/d320e741-96a90c74a8b40801.js","326","static/chunks/326-ddf0a45aa32d9d83.js","750","static/chunks/750-65b981a2bb3ba5be.js","710","static/chunks/710-3e1fea2f304d5cf7.js","185","static/chunks/app/layout-34134e1903cc88e5.js"],""]
6:I[9769,["779","static/chunks/0e762574-ada009a30e142e51.js","792","static/chunks/d320e741-96a90c74a8b40801.js","326","static/chunks/326-ddf0a45aa32d9d83.js","750","static/chunks/750-65b981a2bb3ba5be.js","710","static/chunks/710-3e1fea2f304d5cf7.js","185","static/chunks/app/layout-34134e1903cc88e5.js"],""]
7:I[6954,[],""]
8:I[7264,[],""]
9:I[8326,["779","static/chunks/0e762574-ada009a30e142e51.js","792","static/chunks/d320e741-96a90c74a8b40801.js","326","static/chunks/326-ddf0a45aa32d9d83.js","750","static/chunks/750-65b981a2bb3ba5be.js","710","static/chunks/710-3e1fea2f304d5cf7.js","185","static/chunks/app/layout-34134e1903cc88e5.js"],""]
a:I[4955,["750","static/chunks/750-65b981a2bb3ba5be.js","206","static/chunks/app/blog/%5Bslug%5D/layout-ae2cb8a4bb506a5e.js"],""]
b:I[498,["750","static/chunks/750-65b981a2bb3ba5be.js","206","static/chunks/app/blog/%5Bslug%5D/layout-ae2cb8a4bb506a5e.js"],""]
f:I[2050,["779","static/chunks/0e762574-ada009a30e142e51.js","792","static/chunks/d320e741-96a90c74a8b40801.js","326","static/chunks/326-ddf0a45aa32d9d83.js","750","static/chunks/750-65b981a2bb3ba5be.js","710","static/chunks/710-3e1fea2f304d5cf7.js","185","static/chunks/app/layout-34134e1903cc88e5.js"],""]
e:T518,M165.9 397.4c0 2-2.3 3.6-5.2 3.6-3.3.3-5.6-1.3-5.6-3.6 0-2 2.3-3.6 5.2-3.6 3-.3 5.6 1.3 5.6 3.6zm-31.1-4.5c-.7 2 1.3 4.3 4.3 4.9 2.6 1 5.6 0 6.2-2s-1.3-4.3-4.3-5.2c-2.6-.7-5.5.3-6.2 2.3zm44.2-1.7c-2.9.7-4.9 2.6-4.6 4.9.3 2 2.9 3.3 5.9 2.6 2.9-.7 4.9-2.6 4.6-4.6-.3-1.9-3-3.2-5.9-2.9zM244.8 8C106.1 8 0 113.3 0 252c0 110.9 69.8 205.8 169.5 239.2 12.8 2.3 17.3-5.6 17.3-12.1 0-6.2-.3-40.4-.3-61.4 0 0-70 15-84.7-29.8 0 0-11.4-29.1-27.8-36.6 0 0-22.9-15.7 1.6-15.4 0 0 24.9 2 38.6 25.8 21.9 38.6 58.6 27.5 72.9 20.9 2.3-16 8.8-27.1 16-33.7-55.9-6.2-112.3-14.3-112.3-110.5 0-27.5 7.6-41.3 23.6-58.9-2.6-6.5-11.1-33.3 2.6-67.9 20.9-6.5 69 27 69 27 20-5.6 41.5-8.5 62.8-8.5s42.8 2.9 62.8 8.5c0 0 48.1-33.6 69-27 13.7 34.7 5.2 61.4 2.6 67.9 16 17.7 25.8 31.5 25.8 58.9 0 96.5-58.9 104.2-114.8 110.5 9.2 7.9 17 22.9 17 46.4 0 33.7-.3 75.4-.3 83.6 0 6.5 4.6 14.4 17.3 12.1C428.2 457.8 496 362.9 496 252 496 113.3 383.5 8 244.8 8zM97.2 352.9c-1.3 1-1 3.3.7 5.2 1.6 1.6 3.9 2.3 5.2 1 1.3-1 1-3.3-.7-5.2-1.6-1.6-3.9-2.3-5.2-1zm-10.8-8.1c-.7 1.3.3 2.9 2.3 3.9 1.6 1 3.6.7 4.3-.7.7-1.3-.3-2.9-2.3-3.9-2-.6-3.6-.3-4.3.7zm32.4 35.6c-1.6 1.3-1 4.3 1.3 6.2 2.3 2.3 5.2 2.6 6.5 1 1.3-1.3.7-4.3-1.3-6.2-2.2-2.3-5.2-2.6-6.5-1zm-11.4-14.7c-1.6 1-1.6 3.6 0 5.9 1.6 2.3 4.3 3.3 5.6 2.3 1.6-1.3 1.6-3.9 0-6.2-1.4-2.3-4-3.3-5.6-2z2:[null,["$","html",null,{"lang":"en","suppressHydrationWarning":true,"children":[["$","head",null,{"children":[["$","link",null,{"rel":"icon","type":"image/x-icon","href":"/static/favicons/favicon.ico"}],["$","meta",null,{"name":"theme-color","content":"#000000"}]]}],["$","body",null,{"className":"min-h-screen bg-white text-black antialiased dark:bg-black dark:text-white","suppressHydrationWarning":true,"children":["$","$L5",null,{"attribute":"class","defaultTheme":"dark","enableSystem":false,"themes":["dark","light"],"children":[["$","div",null,{"className":"flex min-h-screen flex-col","children":[["$","$L6",null,{}],["$","main",null,{"className":"flex-1 px-4 py-8 sm:px-6 lg:px-8","children":["$","$L7",null,{"parallelRouterKey":"children","segmentPath":["children"],"loading":"$undefined","loadingStyles":"$undefined","loadingScripts":"$undefined","hasLoading":false,"error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L8",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":["$","div",null,{"className":"flex min-h-screen flex-col items-center justify-center","children":[["$","h1",null,{"className":"text-4xl font-bold","children":"404 - Page Not Found"}],["$","p",null,{"className":"mt-4 text-lg text-gray-600 dark:text-gray-400","children":"The page you're looking for doesn't exist."}],["$","$L9",null,{"href":"/","className":"mt-6 rounded-md bg-blue-500 px-4 py-2 text-white hover:bg-blue-600","children":"Go Home"}]]}],"notFoundStyles":[],"initialChildNode":["$","$L7",null,{"parallelRouterKey":"children","segmentPath":["children","blog","children"],"loading":"$undefined","loadingStyles":"$undefined","loadingScripts":"$undefined","hasLoading":false,"error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L8",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":"$undefined","notFoundStyles":"$undefined","initialChildNode":[null,[["$","$La",null,{}],["$","$Lb",null,{"children":["$","$L7",null,{"parallelRouterKey":"children","segmentPath":["children","blog","children",["slug","create-and-publish-your-own-react-component-library-with-typescript-storybook-and-tailwind","d"],"children"],"loading":"$undefined","loadingStyles":"$undefined","loadingScripts":"$undefined","hasLoading":false,"error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L8",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":"$undefined","notFoundStyles":"$undefined","initialChildNode":["$Lc","$Ld",null],"childPropSegment":"__PAGE__?{\"slug\":\"create-and-publish-your-own-react-component-library-with-typescript-storybook-and-tailwind\"}","styles":[["$","link","0",{"rel":"stylesheet","href":"/armanruet52.github.io/_next/static/css/87ca012b368cc111.css","precedence":"next","crossOrigin":""}]]}]}]],null],"childPropSegment":["slug","create-and-publish-your-own-react-component-library-with-typescript-storybook-and-tailwind","d"],"styles":null}],"childPropSegment":"blog","styles":null}]}],["$","footer",null,{"className":"w-full border-t border-gray-200 dark:border-gray-800","children":["$","div",null,{"className":"mx-auto max-w-4xl px-4 py-8","children":["$","div",null,{"className":"flex items-center justify-between text-gray-500 dark:text-gray-400","children":[["$","div",null,{"className":"flex items-center space-x-2 text-sm","children":[["$","span",null,{"children":"© 2025"}],["$","span",null,{"children":"•"}],["$","span",null,{"children":"Arman Hossen"}]]}],["$","div",null,{"className":"flex items-center space-x-5","children":[["$","$L9",null,{"href":"https://linkedin.com/in/armanruet","target":"_blank","rel":"noopener noreferrer","className":"hover:text-gray-700 dark:hover:text-gray-200","children":[["$","svg",null,{"stroke":"currentColor","fill":"currentColor","strokeWidth":"0","viewBox":"0 0 1024 1024","className":"h-5 w-5","children":["$undefined",[["$","path","0",{"d":"M880 112H144c-17.7 0-32 14.3-32 32v736c0 17.7 14.3 32 32 32h736c17.7 0 32-14.3 32-32V144c0-17.7-14.3-32-32-32zM349.3 793.7H230.6V411.9h118.7v381.8zm-59.3-434a68.8 68.8 0 1 1 68.8-68.8c-.1 38-30.9 68.8-68.8 68.8zm503.7 434H675.1V608c0-44.3-.8-101.2-61.7-101.2-61.7 0-71.2 48.2-71.2 98v188.9H423.7V411.9h113.8v52.2h1.6c15.8-30 54.5-61.7 112.3-61.7 120.2 0 142.3 79.1 142.3 181.9v209.4z","children":[]}]]],"style":{"color":"$undefined"},"height":"1em","width":"1em","xmlns":"http://www.w3.org/2000/svg"}],["$","span",null,{"className":"sr-only","children":"LinkedIn"}]]}],["$","$L9",null,{"href":"https://github.com/armanruet","target":"_blank","rel":"noopener noreferrer","className":"hover:text-gray-700 dark:hover:text-gray-200","children":[["$","svg",null,{"stroke":"currentColor","fill":"currentColor","strokeWidth":"0","viewBox":"0 0 496 512","className":"h-5 w-5","children":["$undefined",[["$","path","0",{"d":"$e","children":[]}]]],"style":{"color":"$undefined"},"height":"1em","width":"1em","xmlns":"http://www.w3.org/2000/svg"}],["$","span",null,{"className":"sr-only","children":"GitHub"}]]}],["$","$L9",null,{"href":"https://twitter.com/armanruet","target":"_blank","rel":"noopener noreferrer","className":"hover:text-gray-700 dark:hover:text-gray-200","children":[["$","svg",null,{"stroke":"currentColor","fill":"currentColor","strokeWidth":"0","viewBox":"0 0 512 512","className":"h-5 w-5","children":["$undefined",[["$","path","0",{"d":"M389.2 48h70.6L305.6 224.2 487 464H345L233.7 318.6 106.5 464H35.8L200.7 275.5 26.8 48H172.4L272.9 180.9 389.2 48zM364.4 421.8h39.1L151.1 88h-42L364.4 421.8z","children":[]}]]],"style":{"color":"$undefined"},"height":"1em","width":"1em","xmlns":"http://www.w3.org/2000/svg"}],["$","span",null,{"className":"sr-only","children":"Twitter"}]]}]]}]]}]}]}]]}],["$","$Lf",null,{}]]}]}]]}],null]
3:[["$","meta","0",{"name":"viewport","content":"width=device-width, initial-scale=1"}],["$","meta","1",{"charSet":"utf-8"}],["$","title","2",{"children":"Create and publish your own React component library with Storybook, TypeScript, and Tailwind | Arman Hossen"}],["$","meta","3",{"property":"og:title","content":"Create and publish your own React component library with Storybook, TypeScript, and Tailwind | Arman Hossen"}],["$","meta","4",{"property":"og:image:type","content":"image/png"}],["$","meta","5",{"property":"og:image:width","content":"1106"}],["$","meta","6",{"property":"og:image:height","content":"483"}],["$","meta","7",{"property":"og:image","content":"https://armanruet.github.io/armanruet52.github.io/opengraph-image.png?fdbfcb345ced5315"}],["$","meta","8",{"name":"twitter:card","content":"summary_large_image"}],["$","meta","9",{"name":"twitter:title","content":"Create and publish your own React component library with Storybook, TypeScript, and Tailwind | Arman Hossen"}],["$","meta","10",{"name":"twitter:image:type","content":"image/png"}],["$","meta","11",{"name":"twitter:image:width","content":"1106"}],["$","meta","12",{"name":"twitter:image:height","content":"483"}],["$","meta","13",{"name":"twitter:image","content":"https://armanruet.github.io/armanruet52.github.io/opengraph-image.png?fdbfcb345ced5315"}]]
10:I[8825,["326","static/chunks/326-ddf0a45aa32d9d83.js","413","static/chunks/413-f05a64d8004f6b4b.js","308","static/chunks/app/blog/%5Bslug%5D/page-b80b95682edef542.js"],"MDXClient"]
11:T959a,/*@jsxRuntime automatic @jsxImportSource react*/
const {Fragment: _Fragment, jsx: _jsx, jsxs: _jsxs} = arguments[0];
const {useMDXComponents: _provideComponents} = arguments[0];
function _createMdxContent(props) {
  const _components = Object.assign({
    h1: "h1",
    p: "p",
    a: "a",
    code: "code",
    h2: "h2",
    figure: "figure",
    pre: "pre",
    span: "span",
    img: "img"
  }, _provideComponents(), props.components);
  return _jsxs(_Fragment, {
    children: [_jsx(_components.h1, {
      children: "Overview"
    }), "\n", _jsx(_components.h1, {
      children: "What is a component library?"
    }), "\n", _jsxs(_components.p, {
      children: ["A ", _jsx(_components.a, {
        href: "https://langvad.dev/blog/what-is-a-component-library/",
        children: "component library"
      }), " is basically a set of re-usable components. It could be a folder inside your project with\ncommon components used throughout the application. It could be a distributed package on npm. It could also be a part of a bigger design system. A component\nlibrary can be small and it can be large. There are no official rules for what a component library means."]
    }), "\n", _jsxs(_components.p, {
      children: ["Some examples of a component library are: Google's ", _jsx(_components.a, {
        href: "https://mui.com/",
        children: "MUI"
      }), ", Alibaba's ", _jsx(_components.a, {
        href: "https://ant.design/",
        children: "Ant Design"
      }), " and IBM's design system ", _jsx(_components.a, {
        href: "https://carbondesignsystem.com/",
        children: "Carbon"
      }), "."]
    }), "\n", _jsx(_components.h1, {
      children: "Introduction"
    }), "\n", _jsxs(_components.p, {
      children: ["I have spent the weekend trying out different guides and tutorials, trying to setup ", _jsx(_components.a, {
        href: "https://storybook.js.org/",
        children: "Storybook"
      }), ", ", _jsx(_components.a, {
        href: "https://rollupjs.org/guide/en/",
        children: "Rollup"
      }), ", ", _jsx(_components.a, {
        href: "https://yarnpkg.com/",
        children: "Yarn"
      }), ", and\n", _jsx(_components.a, {
        href: "https://jestjs.io/",
        children: "Jest"
      }), " to play nicely together but it was a pain, not to mention I really wanted to make ", _jsx(_components.a, {
        href: "https://vitejs.dev/",
        children: "Vite"
      }), " work with this but to no avail."]
    }), "\n", _jsxs(_components.p, {
      children: ["But behold, I found a package called ", _jsx(_components.a, {
        href: "https://tsdx.io/",
        children: "TSDX"
      }), ", it is a zero-config CLI that helps you develop, test, and publish modern TypeScript packages."]
    }), "\n", _jsxs(_components.p, {
      children: ["In this guide, I'll be creating my component library ", _jsx(_components.code, {
        children: "playground"
      }), ", this is where (I'm hoping) I can show off some of the cool component ideas I have to the world and\npublish it to ", _jsx(_components.a, {
        href: "https://www.npmjs.com/",
        children: "NPM"
      }), " (because I'm cool)."]
    }), "\n", _jsx(_components.h1, {
      children: "Getting Started"
    }), "\n", _jsx(_components.h2, {
      children: "Step 1: Initialize project using tsdx"
    }), "\n", _jsx(_components.figure, {
      "data-rehype-pretty-code-figure": "",
      children: _jsx(_components.pre, {
        style: {
          backgroundColor: "#24292e",
          color: "#e1e4e8"
        },
        tabIndex: "0",
        "data-language": "bash",
        "data-theme": "github-dark",
        children: _jsx(_components.code, {
          "data-language": "bash",
          "data-theme": "github-dark",
          style: {
            display: "grid"
          },
          children: _jsxs(_components.span, {
            "data-line": "",
            children: [_jsx(_components.span, {
              style: {
                color: "#B392F0"
              },
              children: "npx"
            }), _jsx(_components.span, {
              style: {
                color: "#9ECBFF"
              },
              children: " tsdx"
            }), _jsx(_components.span, {
              style: {
                color: "#9ECBFF"
              },
              children: " create"
            }), _jsx(_components.span, {
              style: {
                color: "#9ECBFF"
              },
              children: " playground"
            })]
          })
        })
      })
    }), "\n", _jsxs(_components.p, {
      children: ["This will promp you to choose from 3 different options, ", _jsx(_components.code, {
        children: "basic"
      }), ", ", _jsx(_components.code, {
        children: "react"
      }), ", and ", _jsx(_components.code, {
        children: "react-with-storybook"
      }), "."]
    }), "\n", _jsxs(_components.p, {
      children: ["Please choose ", _jsx(_components.code, {
        children: "react-with-storybook"
      })]
    }), "\n", _jsx(_components.p, {
      children: _jsx(_components.img, {
        src: "/static/blog/create-playground.webp",
        alt: "create-playground"
      })
    }), "\n", _jsx(_components.h2, {
      children: "Step 2: Adding Tailwind"
    }), "\n", _jsxs(_components.p, {
      children: ["We will need to install ", _jsx(_components.code, {
        children: "tailwindcss"
      }), ", ", _jsx(_components.code, {
        children: "postcss"
      }), " and ", _jsx(_components.code, {
        children: "autoprefixer"
      })]
    }), "\n", _jsx(_components.figure, {
      "data-rehype-pretty-code-figure": "",
      children: _jsx(_components.pre, {
        style: {
          backgroundColor: "#24292e",
          color: "#e1e4e8"
        },
        tabIndex: "0",
        "data-language": "bash",
        "data-theme": "github-dark",
        children: _jsx(_components.code, {
          "data-language": "bash",
          "data-theme": "github-dark",
          style: {
            display: "grid"
          },
          children: _jsxs(_components.span, {
            "data-line": "",
            children: [_jsx(_components.span, {
              style: {
                color: "#B392F0"
              },
              children: "yarn"
            }), _jsx(_components.span, {
              style: {
                color: "#9ECBFF"
              },
              children: " add"
            }), _jsx(_components.span, {
              style: {
                color: "#79B8FF"
              },
              children: " -D"
            }), _jsx(_components.span, {
              style: {
                color: "#9ECBFF"
              },
              children: " tailwindcss@latest"
            }), _jsx(_components.span, {
              style: {
                color: "#9ECBFF"
              },
              children: " postcss@latest"
            }), _jsx(_components.span, {
              style: {
                color: "#9ECBFF"
              },
              children: " autoprefixer@latest"
            })]
          })
        })
      })
    }), "\n", _jsxs(_components.p, {
      children: ["After installing the tailwindcss dependencies, we need to create a ", _jsx(_components.code, {
        children: "tailwind.config.js"
      }), " file, to do this just run:"]
    }), "\n", _jsx(_components.figure, {
      "data-rehype-pretty-code-figure": "",
      children: _jsx(_components.pre, {
        style: {
          backgroundColor: "#24292e",
          color: "#e1e4e8"
        },
        tabIndex: "0",
        "data-language": "bash",
        "data-theme": "github-dark",
        children: _jsx(_components.code, {
          "data-language": "bash",
          "data-theme": "github-dark",
          style: {
            display: "grid"
          },
          children: _jsxs(_components.span, {
            "data-line": "",
            children: [_jsx(_components.span, {
              style: {
                color: "#B392F0"
              },
              children: "npx"
            }), _jsx(_components.span, {
              style: {
                color: "#9ECBFF"
              },
              children: " tailwindcss"
            }), _jsx(_components.span, {
              style: {
                color: "#9ECBFF"
              },
              children: " init"
            })]
          })
        })
      })
    }), "\n", _jsxs(_components.p, {
      children: ["After generating your ", _jsx(_components.code, {
        children: "tailwind.config.js"
      }), " file, you can add the following lines to run\n", _jsx(_components.a, {
        href: "https://v2.tailwindcss.com/docs/just-in-time-mode",
        children: "Just in Time"
      }), " Mode and specify a purge path to purge any unused CSS"]
    }), "\n", _jsx(_components.figure, {
      "data-rehype-pretty-code-figure": "",
      children: _jsx(_components.pre, {
        style: {
          backgroundColor: "#24292e",
          color: "#e1e4e8"
        },
        tabIndex: "0",
        "data-language": "js:tailwind.config.js",
        "data-theme": "github-dark",
        children: _jsxs(_components.code, {
          "data-language": "js:tailwind.config.js",
          "data-theme": "github-dark",
          style: {
            display: "grid"
          },
          children: [_jsx(_components.span, {
            "data-line": "",
            children: _jsx(_components.span, {
              children: "module.exports = {"
            })
          }), "\n", _jsx(_components.span, {
            "data-line": "",
            children: _jsx(_components.span, {
              children: "  mode: 'jit',"
            })
          }), "\n", _jsx(_components.span, {
            "data-line": "",
            children: _jsx(_components.span, {
              children: "  purge: ['./src/**/*.{js,jsx,ts,tsx}', './stories/*'],"
            })
          }), "\n", _jsx(_components.span, {
            "data-line": "",
            children: _jsx(_components.span, {
              children: "  ...rest of config"
            })
          }), "\n", _jsx(_components.span, {
            "data-line": "",
            children: _jsx(_components.span, {
              children: "}"
            })
          })]
        })
      })
    }), "\n", _jsxs(_components.p, {
      children: ["Next is to create a ", _jsx(_components.code, {
        children: "tailwind.css"
      }), " file at the root of your project, you can name it anything you like by the way,\nI just want to name it tailwind.css because thats the only styles I'll be needing."]
    }), "\n", _jsx(_components.figure, {
      "data-rehype-pretty-code-figure": "",
      children: _jsx(_components.pre, {
        style: {
          backgroundColor: "#24292e",
          color: "#e1e4e8"
        },
        tabIndex: "0",
        "data-language": "css:tailwind.css",
        "data-theme": "github-dark",
        children: _jsxs(_components.code, {
          "data-language": "css:tailwind.css",
          "data-theme": "github-dark",
          style: {
            display: "grid"
          },
          children: [_jsx(_components.span, {
            "data-line": "",
            children: _jsx(_components.span, {
              children: "@tailwind base;"
            })
          }), "\n", _jsx(_components.span, {
            "data-line": "",
            children: _jsx(_components.span, {
              children: "@tailwind components;"
            })
          }), "\n", _jsx(_components.span, {
            "data-line": "",
            children: _jsx(_components.span, {
              children: "@tailwind utilities;"
            })
          })]
        })
      })
    }), "\n", _jsxs(_components.p, {
      children: ["After creating your ", _jsx(_components.code, {
        children: "tailwind.css"
      }), " file, we need to integrate it with storybook, for this step, we will need to add another\ndev dependency ", _jsx(_components.code, {
        children: "@storybook/addon-postcss"
      })]
    }), "\n", _jsx(_components.figure, {
      "data-rehype-pretty-code-figure": "",
      children: _jsx(_components.pre, {
        style: {
          backgroundColor: "#24292e",
          color: "#e1e4e8"
        },
        tabIndex: "0",
        "data-language": "bash",
        "data-theme": "github-dark",
        children: _jsx(_components.code, {
          "data-language": "bash",
          "data-theme": "github-dark",
          style: {
            display: "grid"
          },
          children: _jsxs(_components.span, {
            "data-line": "",
            children: [_jsx(_components.span, {
              style: {
                color: "#B392F0"
              },
              children: "yarn"
            }), _jsx(_components.span, {
              style: {
                color: "#9ECBFF"
              },
              children: " add"
            }), _jsx(_components.span, {
              style: {
                color: "#79B8FF"
              },
              children: " -D"
            }), _jsx(_components.span, {
              style: {
                color: "#9ECBFF"
              },
              children: " @storybook/addon-postcss"
            })]
          })
        })
      })
    }), "\n", _jsxs(_components.p, {
      children: ["After installing ", _jsx(_components.code, {
        children: "@storybook/addon-postcss"
      }), ", we need to add it to ", _jsx(_components.code, {
        children: "./storybook/main.js"
      })]
    }), "\n", _jsx(_components.figure, {
      "data-rehype-pretty-code-figure": "",
      children: _jsx(_components.pre, {
        style: {
          backgroundColor: "#24292e",
          color: "#e1e4e8"
        },
        tabIndex: "0",
        "data-language": "js:./storybook/main.js",
        "data-theme": "github-dark",
        children: _jsxs(_components.code, {
          "data-language": "js:./storybook/main.js",
          "data-theme": "github-dark",
          style: {
            display: "grid"
          },
          children: [_jsx(_components.span, {
            "data-line": "",
            children: _jsx(_components.span, {
              children: "module.exports = {"
            })
          }), "\n", _jsx(_components.span, {
            "data-line": "",
            children: _jsx(_components.span, {
              children: "  stories: ['../stories/**/*.stories.@(ts|tsx|js|jsx)'],"
            })
          }), "\n", _jsx(_components.span, {
            "data-line": "",
            children: _jsx(_components.span, {
              children: "  addons: ["
            })
          }), "\n", _jsx(_components.span, {
            "data-line": "",
            children: _jsx(_components.span, {
              children: "    '@storybook/addon-links',"
            })
          }), "\n", _jsx(_components.span, {
            "data-line": "",
            children: _jsx(_components.span, {
              children: "    '@storybook/addon-essentials',"
            })
          }), "\n", _jsx(_components.span, {
            "data-line": "",
            children: _jsx(_components.span, {
              children: "    {"
            })
          }), "\n", _jsx(_components.span, {
            "data-line": "",
            children: _jsx(_components.span, {
              children: "      name: '@storybook/addon-postcss',"
            })
          }), "\n", _jsx(_components.span, {
            "data-line": "",
            children: _jsx(_components.span, {
              children: "      options: {"
            })
          }), "\n", _jsx(_components.span, {
            "data-line": "",
            children: _jsx(_components.span, {
              children: "        postcssLoaderOptions: {"
            })
          }), "\n", _jsx(_components.span, {
            "data-line": "",
            children: _jsx(_components.span, {
              children: "          implementation: require('postcss'),"
            })
          }), "\n", _jsx(_components.span, {
            "data-line": "",
            children: _jsx(_components.span, {
              children: "        },"
            })
          }), "\n", _jsx(_components.span, {
            "data-line": "",
            children: _jsx(_components.span, {
              children: "      },"
            })
          }), "\n", _jsx(_components.span, {
            "data-line": "",
            children: _jsx(_components.span, {
              children: "    },"
            })
          }), "\n", _jsx(_components.span, {
            "data-line": "",
            children: _jsx(_components.span, {
              children: "  ],"
            })
          }), "\n", _jsx(_components.span, {
            "data-line": "",
            children: _jsx(_components.span, {
              children: "  ...rest of config"
            })
          }), "\n", _jsx(_components.span, {
            "data-line": "",
            children: _jsx(_components.span, {
              children: "};"
            })
          })]
        })
      })
    }), "\n", _jsxs(_components.p, {
      children: ["And finally, to be able to see our tailwind styles in storybook, we will need to import our ", _jsx(_components.code, {
        children: "tailwind.css"
      }), " file in ", _jsx(_components.code, {
        children: ".storybook/preview.js"
      })]
    }), "\n", _jsx(_components.figure, {
      "data-rehype-pretty-code-figure": "",
      children: _jsx(_components.pre, {
        style: {
          backgroundColor: "#24292e",
          color: "#e1e4e8"
        },
        tabIndex: "0",
        "data-language": "js:.storybook/preview.js",
        "data-theme": "github-dark",
        children: _jsx(_components.code, {
          "data-language": "js:.storybook/preview.js",
          "data-theme": "github-dark",
          style: {
            display: "grid"
          },
          children: _jsx(_components.span, {
            "data-line": "",
            children: _jsx(_components.span, {
              children: "import '../tailwind.css';"
            })
          })
        })
      })
    }), "\n", _jsx(_components.p, {
      children: "We can now test if your tailwind styles are working, lets run storybook"
    }), "\n", _jsx(_components.figure, {
      "data-rehype-pretty-code-figure": "",
      children: _jsx(_components.pre, {
        style: {
          backgroundColor: "#24292e",
          color: "#e1e4e8"
        },
        tabIndex: "0",
        "data-language": "bash",
        "data-theme": "github-dark",
        children: _jsx(_components.code, {
          "data-language": "bash",
          "data-theme": "github-dark",
          style: {
            display: "grid"
          },
          children: _jsxs(_components.span, {
            "data-line": "",
            children: [_jsx(_components.span, {
              style: {
                color: "#B392F0"
              },
              children: "yarn"
            }), _jsx(_components.span, {
              style: {
                color: "#9ECBFF"
              },
              children: " storybook"
            })]
          })
        })
      })
    }), "\n", _jsxs(_components.p, {
      children: ["You can add the following styles in your ", _jsx(_components.code, {
        children: "src/index.tsx"
      })]
    }), "\n", _jsx(_components.figure, {
      "data-rehype-pretty-code-figure": "",
      children: _jsx(_components.pre, {
        style: {
          backgroundColor: "#24292e",
          color: "#e1e4e8"
        },
        tabIndex: "0",
        "data-language": "tsx:src/index.tsx",
        "data-theme": "github-dark",
        children: _jsxs(_components.code, {
          "data-language": "tsx:src/index.tsx",
          "data-theme": "github-dark",
          style: {
            display: "grid"
          },
          children: [_jsx(_components.span, {
            "data-line": "",
            children: _jsx(_components.span, {
              children: "export const Thing: FC<Props> = ({ children }) => {"
            })
          }), "\n", _jsx(_components.span, {
            "data-line": "",
            children: _jsx(_components.span, {
              children: "  return ("
            })
          }), "\n", _jsx(_components.span, {
            "data-line": "",
            children: _jsx(_components.span, {
              children: "    <div className=\"text-xl text-pink-500 p-4 bg-gray-200 rounded-lg\">"
            })
          }), "\n", _jsx(_components.span, {
            "data-line": "",
            children: _jsx(_components.span, {
              children: "      {children || `the snozzberries taste like snozzberries`}"
            })
          }), "\n", _jsx(_components.span, {
            "data-line": "",
            children: _jsx(_components.span, {
              children: "    </div>"
            })
          }), "\n", _jsx(_components.span, {
            "data-line": "",
            children: _jsx(_components.span, {
              children: "  );"
            })
          }), "\n", _jsx(_components.span, {
            "data-line": "",
            children: _jsx(_components.span, {
              children: "};"
            })
          })]
        })
      })
    }), "\n", _jsx(_components.p, {
      children: "and you should see our tailwind styles working"
    }), "\n", _jsx(_components.p, {
      children: _jsx(_components.img, {
        src: "/static/blog/tailwind-working.webp",
        alt: "tailwind-working"
      })
    }), "\n", _jsx(_components.h2, {
      children: "Step 3: Setup our build configuration"
    }), "\n", _jsx(_components.p, {
      children: "Because we added Tailwind to our library, we need to include exporting it's styles in\nour build config."
    }), "\n", _jsxs(_components.p, {
      children: ["Luckily, Tailwind has great documentation, and we can just use it's default configuration from the\n", _jsx(_components.a, {
        href: "https://tailwindcss.com/docs/optimizing-for-production",
        children: "optimizing for production"
      }), " guide docs"]
    }), "\n", _jsxs(_components.p, {
      children: ["In our ", _jsx(_components.code, {
        children: "package.json"
      }), " file, we just need to add the following"]
    }), "\n", _jsx(_components.figure, {
      "data-rehype-pretty-code-figure": "",
      children: _jsx(_components.pre, {
        style: {
          backgroundColor: "#24292e",
          color: "#e1e4e8"
        },
        tabIndex: "0",
        "data-language": "json:package.json",
        "data-theme": "github-dark",
        children: _jsxs(_components.code, {
          "data-language": "json:package.json",
          "data-theme": "github-dark",
          style: {
            display: "grid"
          },
          children: [_jsx(_components.span, {
            "data-line": "",
            children: _jsx(_components.span, {
              children: "\"scripts\": {"
            })
          }), "\n", _jsx(_components.span, {
            "data-line": "",
            children: _jsx(_components.span, {
              children: "  ... rest of"
            })
          }), "\n", _jsx(_components.span, {
            "data-line": "",
            children: _jsx(_components.span, {
              children: "\"build-tailwind\": \"npx tailwindcss -o ./dist/styles.css --minify\""
            })
          }), "\n", _jsx(_components.span, {
            "data-line": "",
            children: _jsx(_components.span, {
              children: "}"
            })
          })]
        })
      })
    }), "\n", _jsxs(_components.p, {
      children: ["And we also need to change our build script to consume our new ", _jsx(_components.code, {
        children: "build-tailwind"
      }), " script"]
    }), "\n", _jsx(_components.figure, {
      "data-rehype-pretty-code-figure": "",
      children: _jsx(_components.pre, {
        style: {
          backgroundColor: "#24292e",
          color: "#e1e4e8"
        },
        tabIndex: "0",
        "data-language": "json:package.json",
        "data-theme": "github-dark",
        children: _jsxs(_components.code, {
          "data-language": "json:package.json",
          "data-theme": "github-dark",
          style: {
            display: "grid"
          },
          children: [_jsx(_components.span, {
            "data-line": "",
            children: _jsx(_components.span, {
              children: "\"scripts\": {"
            })
          }), "\n", _jsx(_components.span, {
            "data-line": "",
            children: _jsx(_components.span, {
              children: "  ... rest of"
            })
          }), "\n", _jsx(_components.span, {
            "data-line": "",
            children: _jsx(_components.span, {
              children: "  \"build\": \"tsdx build && yarn build-tailwind\","
            })
          }), "\n", _jsx(_components.span, {
            "data-line": "",
            children: _jsx(_components.span, {
              children: "}"
            })
          })]
        })
      })
    }), "\n", _jsxs(_components.p, {
      children: ["To check if your build worked, you can run ", _jsx(_components.code, {
        children: "yarn build"
      }), " and check if your build has\ngenerated a ", _jsx(_components.code, {
        children: "styles.css"
      }), " file in your ", _jsx(_components.code, {
        children: "dist"
      }), " folder"]
    }), "\n", _jsx(_components.figure, {
      "data-rehype-pretty-code-figure": "",
      children: _jsx(_components.pre, {
        style: {
          backgroundColor: "#24292e",
          color: "#e1e4e8"
        },
        tabIndex: "0",
        "data-language": "diff:dist/",
        "data-theme": "github-dark",
        children: _jsxs(_components.code, {
          "data-language": "diff:dist/",
          "data-theme": "github-dark",
          style: {
            display: "grid"
          },
          children: [_jsx(_components.span, {
            "data-line": "",
            children: _jsx(_components.span, {
              children: "dist/"
            })
          }), "\n", _jsx(_components.span, {
            "data-line": "",
            children: _jsx(_components.span, {
              children: "index.d.ts"
            })
          }), "\n", _jsx(_components.span, {
            "data-line": "",
            children: _jsx(_components.span, {
              children: "index.js"
            })
          }), "\n", _jsx(_components.span, {
            "data-line": "",
            children: _jsx(_components.span, {
              children: "... rest of config"
            })
          }), "\n", _jsx(_components.span, {
            "data-line": "",
            children: _jsx(_components.span, {
              children: "+styles.css"
            })
          })]
        })
      })
    }), "\n", _jsxs(_components.p, {
      children: ["The ", _jsx(_components.code, {
        children: "styles.css"
      }), " is important because this is what our package consumers will use for our\nstyles to take effect in their projects."]
    }), "\n", _jsx(_components.h2, {
      children: "Step 4: Publishing to NPM"
    }), "\n", _jsx(_components.p, {
      children: "First step is to push our code to a Github repo, so just create a new repository\nand push your code to Github,"
    }), "\n", _jsx(_components.figure, {
      "data-rehype-pretty-code-figure": "",
      children: _jsx(_components.pre, {
        style: {
          backgroundColor: "#24292e",
          color: "#e1e4e8"
        },
        tabIndex: "0",
        "data-language": "bash",
        "data-theme": "github-dark",
        children: _jsxs(_components.code, {
          "data-language": "bash",
          "data-theme": "github-dark",
          style: {
            display: "grid"
          },
          children: [_jsxs(_components.span, {
            "data-line": "",
            children: [_jsx(_components.span, {
              style: {
                color: "#B392F0"
              },
              children: "git"
            }), _jsx(_components.span, {
              style: {
                color: "#9ECBFF"
              },
              children: " init"
            })]
          }), "\n", _jsxs(_components.span, {
            "data-line": "",
            children: [_jsx(_components.span, {
              style: {
                color: "#B392F0"
              },
              children: "git"
            }), _jsx(_components.span, {
              style: {
                color: "#9ECBFF"
              },
              children: " remote"
            }), _jsx(_components.span, {
              style: {
                color: "#9ECBFF"
              },
              children: " add"
            }), _jsx(_components.span, {
              style: {
                color: "#9ECBFF"
              },
              children: " origin"
            }), _jsx(_components.span, {
              style: {
                color: "#F97583"
              },
              children: " <"
            }), _jsx(_components.span, {
              style: {
                color: "#9ECBFF"
              },
              children: "repo"
            }), _jsx(_components.span, {
              style: {
                color: "#9ECBFF"
              },
              children: " origin"
            }), _jsx(_components.span, {
              style: {
                color: "#9ECBFF"
              },
              children: " ur"
            }), _jsx(_components.span, {
              style: {
                color: "#E1E4E8"
              },
              children: "l"
            }), _jsx(_components.span, {
              style: {
                color: "#F97583"
              },
              children: ">"
            })]
          }), "\n", _jsxs(_components.span, {
            "data-line": "",
            children: [_jsx(_components.span, {
              style: {
                color: "#B392F0"
              },
              children: "git"
            }), _jsx(_components.span, {
              style: {
                color: "#9ECBFF"
              },
              children: " add"
            }), _jsx(_components.span, {
              style: {
                color: "#9ECBFF"
              },
              children: " ."
            })]
          }), "\n", _jsxs(_components.span, {
            "data-line": "",
            children: [_jsx(_components.span, {
              style: {
                color: "#B392F0"
              },
              children: "git"
            }), _jsx(_components.span, {
              style: {
                color: "#9ECBFF"
              },
              children: " commit"
            }), _jsx(_components.span, {
              style: {
                color: "#79B8FF"
              },
              children: " -m"
            }), _jsx(_components.span, {
              style: {
                color: "#9ECBFF"
              },
              children: " “initial"
            }), _jsx(_components.span, {
              style: {
                color: "#9ECBFF"
              },
              children: " setup"
            })]
          }), "\n", _jsxs(_components.span, {
            "data-line": "",
            children: [_jsx(_components.span, {
              style: {
                color: "#B392F0"
              },
              children: "git"
            }), _jsx(_components.span, {
              style: {
                color: "#9ECBFF"
              },
              children: " push"
            }), _jsx(_components.span, {
              style: {
                color: "#9ECBFF"
              },
              children: " origin"
            }), _jsx(_components.span, {
              style: {
                color: "#9ECBFF"
              },
              children: " master"
            })]
          })]
        })
      })
    }), "\n", _jsx(_components.p, {
      children: "Next step is to login to your NPM account via terminal"
    }), "\n", _jsx(_components.figure, {
      "data-rehype-pretty-code-figure": "",
      children: _jsx(_components.pre, {
        style: {
          backgroundColor: "#24292e",
          color: "#e1e4e8"
        },
        tabIndex: "0",
        "data-language": "bash",
        "data-theme": "github-dark",
        children: _jsx(_components.code, {
          "data-language": "bash",
          "data-theme": "github-dark",
          style: {
            display: "grid"
          },
          children: _jsxs(_components.span, {
            "data-line": "",
            children: [_jsx(_components.span, {
              style: {
                color: "#B392F0"
              },
              children: "npm"
            }), _jsx(_components.span, {
              style: {
                color: "#9ECBFF"
              },
              children: " login"
            })]
          })
        })
      })
    }), "\n", _jsx(_components.p, {
      children: "This will prompt you to enter your NPM username, password, and email address."
    }), "\n", _jsxs(_components.p, {
      children: ["If you don't have an NPM account yet, you can create an account ", _jsx(_components.a, {
        href: "https://www.npmjs.com/signup",
        children: "here"
      })]
    }), "\n", _jsxs(_components.p, {
      children: ["After logging in, we are ready to publish our package, but first, we need to change our\npackage name to whatever we want, in our case it is called ", _jsx(_components.code, {
        children: "@dlarroder/playground"
      })]
    }), "\n", _jsx(_components.figure, {
      "data-rehype-pretty-code-figure": "",
      children: _jsx(_components.pre, {
        style: {
          backgroundColor: "#24292e",
          color: "#e1e4e8"
        },
        tabIndex: "0",
        "data-language": "json:package.json",
        "data-theme": "github-dark",
        children: _jsxs(_components.code, {
          "data-language": "json:package.json",
          "data-theme": "github-dark",
          style: {
            display: "grid"
          },
          children: [_jsx(_components.span, {
            "data-line": "",
            children: _jsx(_components.span, {
              children: "\"name\": \"@dlarroder/playground\","
            })
          }), "\n", _jsx(_components.span, {
            "data-line": "",
            children: _jsx(_components.span, {
              children: "\"author\": \"Arman Hossen\","
            })
          }), "\n", _jsx(_components.span, {
            "data-line": "",
            children: _jsx(_components.span, {
              children: "\"version\": \"0.0.1\","
            })
          })]
        })
      })
    }), "\n", _jsx(_components.p, {
      children: "After changing our package.json file, we can now run our build so it will pick up our new package name."
    }), "\n", _jsx(_components.figure, {
      "data-rehype-pretty-code-figure": "",
      children: _jsx(_components.pre, {
        style: {
          backgroundColor: "#24292e",
          color: "#e1e4e8"
        },
        tabIndex: "0",
        "data-language": "bash",
        "data-theme": "github-dark",
        children: _jsx(_components.code, {
          "data-language": "bash",
          "data-theme": "github-dark",
          style: {
            display: "grid"
          },
          children: _jsxs(_components.span, {
            "data-line": "",
            children: [_jsx(_components.span, {
              style: {
                color: "#B392F0"
              },
              children: "yarn"
            }), _jsx(_components.span, {
              style: {
                color: "#9ECBFF"
              },
              children: " build"
            })]
          })
        })
      })
    }), "\n", _jsxs(_components.p, {
      children: ["After building, we will have our updated ", _jsx(_components.code, {
        children: "/dist"
      }), " folder with our new name, we can now run our\nfinal command ", _jsx(_components.code, {
        children: "npm publish --access public"
      })]
    }), "\n", _jsx(_components.figure, {
      "data-rehype-pretty-code-figure": "",
      children: _jsx(_components.pre, {
        style: {
          backgroundColor: "#24292e",
          color: "#e1e4e8"
        },
        tabIndex: "0",
        "data-language": "bash",
        "data-theme": "github-dark",
        children: _jsx(_components.code, {
          "data-language": "bash",
          "data-theme": "github-dark",
          style: {
            display: "grid"
          },
          children: _jsxs(_components.span, {
            "data-line": "",
            children: [_jsx(_components.span, {
              style: {
                color: "#B392F0"
              },
              children: "npm"
            }), _jsx(_components.span, {
              style: {
                color: "#9ECBFF"
              },
              children: " publish"
            }), _jsx(_components.span, {
              style: {
                color: "#79B8FF"
              },
              children: " --access"
            }), _jsx(_components.span, {
              style: {
                color: "#9ECBFF"
              },
              children: " public"
            })]
          })
        })
      })
    }), "\n", _jsxs(_components.p, {
      children: ["Boom, you are done! you can now check our NPM account for our new package ", _jsx(_components.a, {
        href: "https://www.npmjs.com/package/@dlarroder/playground",
        children: "@dlarroder/playground"
      }), "."]
    }), "\n", _jsx(_components.h1, {
      children: "Conclusion"
    }), "\n", _jsxs(_components.p, {
      children: ["Building and publishing your own package might sound hard at first, but it is really simple when you've tried it,\nyou just need to follow some random guide in the internet like this one, (joke) but CLI tools like ", _jsx(_components.a, {
        href: "https://tsdx.io/",
        children: "tsdx"
      }), " really\nmakes it simple to bootstrap your very own component library. I really had fun creating my playground package and this\nguide, hope this helps!"]
    })]
  });
}
function MDXContent(props = {}) {
  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);
  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {
    children: _jsx(_createMdxContent, props)
  })) : _createMdxContent(props);
}
return {
  default: MDXContent
};
d:["$","article",null,{"className":"mx-auto max-w-[900px] px-4 py-12","children":[["$","header",null,{"className":"mb-8","children":[["$","h1",null,{"className":"blog-post_title__ew4vR","children":"Create and publish your own React component library with Storybook, TypeScript, and Tailwind"}],["$","p",null,{"className":"text-gray-500 dark:text-gray-400 mt-2","children":"$undefined"}]]}],["$","div",null,{"className":"blog-post_content__Ydq91","children":["$","$L10",null,{"content":{"compiledSource":"$11","frontmatter":{},"scope":{}}}]}]]}]
c:null
